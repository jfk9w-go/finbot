{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": 3,
  "iteration": 1652858010514,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "pg_finance"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "color-text",
            "filterable": false,
            "minWidth": 50
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgb(207, 207, 207)",
                "value": null
              },
              {
                "color": "red",
                "value": -1000000
              },
              {
                "color": "yellow",
                "value": -200000
              },
              {
                "color": "rgb(216, 217, 216)",
                "value": 0
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 13,
        "w": 9,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.4.7",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "pg_finance"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "with t as (select a.name || ' (' || account_currency || ')' as account,\n                  sum(account_amount * (case when o.type = 'Debit' then -1 else 1 end)) as balance\n           from operations o\n                    inner join accounts a on a.id = o.account_id\n           where status != 'FAILED' and debiting_time is not null\n           group by 1\n           order by 1)\nselect * from t\nwhere t.balance != 0\nunion all\nselect 'ИТОГО (' || account_currency || ')' as account,\n       sum(account_amount * (case when o.type = 'Debit' then -1 else 1 end)) as balance\nfrom operations o inner join accounts a on a.id = o.account_id\nwhere a.name not like 'Вклад%' and debiting_time is not null\ngroup by account",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Balance",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "pg_finance"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "right",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 0,
            "pointSize": 6,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line"
            }
          },
          "links": [
            {
              "title": "",
              "url": "https://graf.sonc.top/d/uGiQ1BuMz/expense-categories?orgId=1&var-category=${__data.fields.category}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "currencyRUB"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "pir"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "left"
              },
              {
                "id": "unit",
                "value": "percentunit"
              },
              {
                "id": "custom.lineStyle"
              },
              {
                "id": "custom.showPoints",
                "value": "always"
              },
              {
                "id": "custom.drawStyle",
                "value": "line"
              },
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "custom.lineWidth",
                "value": 1
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "text",
                      "value": null
                    },
                    {
                      "color": "green",
                      "value": 0
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 13,
        "w": 15,
        "x": 9,
        "y": 0
      },
      "id": 10,
      "links": [],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "8.0.6",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "pg_finance"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "with t as (select date_trunc('month', time) as time, sum(account_amount) as amount\n           from operations o\n           where status != 'FAILED'\n            and type = 'Credit'\n            and debiting_time is not null\n            and not (description in ([[users]]) and merchant_name in ('Тинькофф банк', 'Входящий перевод'))\n            and description not in ('Перевод между счетами', 'Перевод с карты')\n            and category in ('Бонусы', 'Пополнения', 'Переводы', 'Проценты', 'Зарплата')\n            and account_currency = 'RUB'\n           group by 1),\n     v as (select time, amount, avg(amount) over (order by time rows between [[income_months]] preceding and 1 preceding) as avg_amount from t)\nselect time, (amount - avg_amount) / avg_amount as pir\nfrom v\norder by 1;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "pg_finance"
          },
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with t as (select date_trunc('month', time) as time, sum(account_amount) as amount\n           from operations o\n           where status != 'FAILED'\n            and type = 'Credit'\n            and debiting_time is not null\n            and not (description in ([[users]]) and merchant_name in ('Тинькофф банк', 'Входящий перевод'))\n            and description not in ('Перевод между счетами', 'Перевод с карты')\n            and category in ('Бонусы', 'Пополнения', 'Переводы', 'Проценты', 'Зарплата')\n            and account_currency = 'RUB'\n           group by 1),\n     v as (select time, amount, avg(amount) over (order by time rows between [[income_months]] preceding and 1 preceding) as avg_amount from t)\nselect time, amount, avg_amount\nfrom v\norder by 1;",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Income (RUB)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "pg_finance"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "color-text",
            "filterable": false,
            "minWidth": 50
          },
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "": {
                  "text": ""
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgb(214, 214, 214)",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "pct"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    },
                    {
                      "color": "green",
                      "value": 0
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 10,
        "x": 0,
        "y": 13
      },
      "id": 8,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.4.7",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "with t as (select tp.currency,\n                  tp.username,\n                  sum(buy_price * quantity) / sum(quantity) as buy_price,\n                  sum(quantity)                             as quantity,\n                  sum(value * quantity) / sum(quantity)     as price\n           from trading_positions tp\n                    inner join (select u.ticker, u.value\n                                from purchased_securities u\n                                         inner join (select ticker, max(time) as time from purchased_securities group by ticker) v\n                                                    using (ticker, time)) w\n                               using (ticker)\n           where tp.sell_time is null\n           group by tp.currency, tp.username),\n     x as (select currency,\n                  username,\n                  sum(1.003 * buy_price * quantity)                                                                          as buy,\n                  sum((0.997 * price - 0.13 * case when price - buy_price > 0 then price - buy_price else 0 end) * quantity) as sell\n           from t\n           group by currency, username)\nselect *\nfrom (select username || ' (' || currency || ')' as account,\n             sum(buy)                        as buy,\n             sum(sell)                       as sell,\n             sum(sell - buy)                 as profit,\n             sum(sell) / sum(buy) - 1        as pct\n      from x\n      group by 1\n      order by 1) as y\nunion all\n(select 'ИТОГО (' || currency || ')' as account,\n        sum(buy)                 as buy,\n        sum(sell)                as sell,\n        sum(sell - buy)          as profit,\n        sum(sell) / sum(buy) - 1 as pct\n from x\n group by 1\n order by 1)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Stocks",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "pg_finance"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyRUB"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 7,
        "x": 10,
        "y": 13
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "8.1.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "pg_finance"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "select date_trunc('month', time)                                           as time,\n       sum(account_amount * (case when type = 'Credit' then 1 else 0 end)) as credit,\n       sum(account_amount * (case when type = 'Debit' then -1 else 0 end)) as debit\nfrom operations\nwhere coalesce(merchant_name, '') not in ('Внутрибанковский перевод', 'Вывод с брокерского счета', 'Пополнение брокерского счета')\n  and debiting_time is not null\n  and not (description in ([[users]]) and merchant_name in ('Тинькофф банк', 'Входящий перевод'))\n  and date_trunc('month', time) >= $__timeFrom() and date_trunc('month', time) < $__timeTo()\n  and status != 'FAILED'\n  and account_currency = 'RUB'\ngroup by 1\norder by 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Debit / credit RUB",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "pg_finance"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 7,
        "x": 17,
        "y": 13
      },
      "id": 11,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "8.1.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "pg_finance"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "select date_trunc('month', time)                                           as time,\n       sum(account_amount * (case when type = 'Credit' then 1 else 0 end)) as credit,\n       sum(account_amount * (case when type = 'Debit' then -1 else 0 end)) as debit\nfrom operations\nwhere coalesce(merchant_name, '') not in ('Внутрибанковский перевод', 'Вывод с брокерского счета', 'Пополнение брокерского счета')\n  and debiting_time is not null\n  and not (description in ([[users]]) and merchant_name in ('Тинькофф банк', 'Входящий перевод'))\n  and date_trunc('month', time) >= $__timeFrom() and date_trunc('month', time) < $__timeTo()\n  and status != 'FAILED'\n  and account_currency = 'USD'\ngroup by 1\norder by 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Debit / credit USD",
      "type": "timeseries"
    }
  ],
  "refresh": false,
  "schemaVersion": 35,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": "12",
          "value": "12"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "income_months",
        "options": [
          {
            "selected": false,
            "text": "1",
            "value": "1"
          },
          {
            "selected": false,
            "text": "2",
            "value": "2"
          },
          {
            "selected": false,
            "text": "4",
            "value": "4"
          },
          {
            "selected": false,
            "text": "6",
            "value": "6"
          },
          {
            "selected": true,
            "text": "12",
            "value": "12"
          },
          {
            "selected": false,
            "text": "18",
            "value": "18"
          },
          {
            "selected": false,
            "text": "24",
            "value": "24"
          },
          {
            "selected": false,
            "text": "36",
            "value": "36"
          },
          {
            "selected": false,
            "text": "48",
            "value": "48"
          }
        ],
        "query": "1, 2, 4, 6, 12, 18, 24, 36, 48",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "users",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "Имя Ф.",
            "value": "Имя Ф."
          }
        ],
        "query": "Имя Ф.",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-13M",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Overview",
  "uid": "hbcsIxXMk",
  "version": 106,
  "weekStart": ""
}